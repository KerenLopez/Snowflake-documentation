USE ROLE ACCOUNTADMIN;

----------------------------------------------------------------------------
-- Tear-down script
----------------------------------------------------------------------------
DROP WAREHOUSE IF EXISTS SALES_DEV_ADHOC;
DROP WAREHOUSE IF EXISTS SALES_PRD_ADHOC;
DROP DATABASE IF EXISTS DEMO_DEV;
DROP DATABASE IF EXISTS DEMO_PRD;
DROP DATABASE IF EXISTS TAGGING_DB_TEST;

----------------------------------------------------------------------------
--Create objects
----------------------------------------------------------------------------

-- 1. Warehouses for sales and research

CREATE OR REPLACE WAREHOUSE SALES_DEV_ADHOC WAREHOUSE_SIZE = XSMALL INITIALLY_SUSPENDED = TRUE AUTO_RESUME = TRUE AUTO_SUSPEND=60;
CREATE OR REPLACE WAREHOUSE SALES_PRD_ADHOC WAREHOUSE_SIZE = XSMALL INITIALLY_SUSPENDED = TRUE AUTO_RESUME = TRUE AUTO_SUSPEND=60;

--2. Databases and schemas
USE WAREHOUSE COMPUTE_WH;
CREATE OR REPLACE DATABASE DEMO_PRD;
CREATE OR REPLACE SCHEMA DEMO_PRD.SALES_DM;

CREATE OR REPLACE DATABASE DEMO_DEV;
CREATE OR REPLACE SCHEMA DEMO_DEV.SALES_DM;

--3. Create tables by coping sample data
CREATE OR REPLACE TABLE DEMO_DEV.SALES_DM.CUSTOMER
AS
SELECT * FROM SNOWFLAKE_SAMPLE_DATA.TPCDS_SF10TCL.CUSTOMER;

CREATE OR REPLACE TABLE DEMO_DEV.SALES_DM.CUSTOMER_ADRESS
AS
SELECT * FROM SNOWFLAKE_SAMPLE_DATA.TPCDS_SF10TCL.CUSTOMER_ADDRESS;

CREATE OR REPLACE TABLE DEMO_PRD.SALES_DM.CUSTOMER
AS
SELECT * FROM SNOWFLAKE_SAMPLE_DATA.TPCDS_SF10TCL.CUSTOMER;

CREATE OR REPLACE TABLE DEMO_PRD.SALES_DM.CUSTOMER_ADRESS
AS
SELECT * FROM SNOWFLAKE_SAMPLE_DATA.TPCDS_SF10TCL.CUSTOMER_ADDRESS;

----------------------------------------------------------------------------
--Create tags
----------------------------------------------------------------------------
--1. Centralized tagging db to store object tags
CREATE OR REPLACE DATABASE TAGGING_DB_TEST;

--2. Centralized schema within tagging db to store object tags
CREATE OR REPLACE SCHEMA TAGGING_DB_TEST.TAGGING_SCH_TEST;

--***************************************************************************
--3. Creating a role to assign tags
USE ROLE SECURITYADMIN;
CREATE ROLE TAG_ADMIN;
USE ROLE ACCOUNTADMIN;
GRANT CREATE TAG ON SCHEMA TAGGING_DB_TEST.TAGGING_SCH_TEST TO ROLE "TAG_ADMIN";
GRANT APPLY TAG ON ACCOUNT TO ROLE "TAG_ADMIN";

--4. Grant the tag_admin custom role to a user serving as the tag administrator
USE ROLE SECURITYADMIN;
GRANT ROLE "TAG_ADMIN" TO USER SARA;

--5. Grant compute and data resources
USE ROLE ACCOUNTADMIN;
GRANT USAGE ON WAREHOUSE X TO ROLE "TAG_ADMIN";
GRANT USAGE ON DATABASE TAGGING_DB_TEST TO ROLE "TAG_ADMIN";
GRANT ALL PRIVILEGES ON SCHEMA TAGGING_SCH_TEST TO ROLE "TAG_ADMIN";
GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA TAGGING_SCH_TEST TO ROLE "TAG_ADMIN";
--****************************************************************************

--6. Create 2 tags with predifined values
CREATE TAG IF NOT EXISTS DEPARTMENTS_TEST ALLOWED_VALUES 'RESEARCH', 'SALES', 'ENGINEERING';
CREATE TAG IF NOT EXISTS ENVIRONMENT_TEST ALLOWED_VALUES 'DEV', 'PRD';

--7. List of allowed string values for a given tag, specifying its database, schema and name
SELECT SYSTEM$GET_TAG_ALLOWED_VALUES('TAGGING_DB_TEST.TAGGING_SCH_TEST.DEPARTMENTS_TEST');
SELECT SYSTEM$GET_TAG_ALLOWED_VALUES('TAGGING_DB_TEST.TAGGING_SCH_TEST.ENVIRONMENT_TEST');

SHOW TAGS;

----------------------------------------------------------------------------
--Assign tags to objects
----------------------------------------------------------------------------


--1. Tagging warehouses

ALTER WAREHOUSE SALES_DEV_ADHOC SET TAG TAGGING_DB_TEST.TAGGING_SCH_TEST.DEPARTMENTS_TEST = 'SALES', ALTER WAREHOUSE SALES_DEV_ADHOC SET TAG TAGGING_DB_TEST.TAGGING_SCH_TEST.ENVIRONMENT_TEST = 'DEV';

--Verify
SELECT SYSTEM$GET_TAG('TAGGING_DB_TEST.TAGGING_SCH_TEST.DEPARTMENTS_TEST', 'SALES_DEV_ADHOC', 'WAREHOUSE');
SELECT SYSTEM$GET_TAG('TAGGING_DB_TEST.TAGGING_SCH_TEST.ENVIRONMENT_TEST', 'SALES_DEV_ADHOC', 'WAREHOUSE');

ALTER WAREHOUSE SALES_PRD_ADHOC SET TAG TAGGING_DB_TEST.TAGGING_SCH_TEST.DEPARTMENTS_TEST = 'SALES', ALTER WAREHOUSE SALES_PRD_ADHOC SET TAG TAGGING_DB_TEST.TAGGING_SCH_TEST.ENVIRONMENT_TEST = 'PRD';

--Verify
SELECT SYSTEM$GET_TAG('TAGGING_DB_TEST.TAGGING_SCH_TEST.DEPARTMENTS_TEST', 'SALES_PRD_ADHOC', 'WAREHOUSE');
SELECT SYSTEM$GET_TAG('TAGGING_DB_TEST.TAGGING_SCH_TEST.ENVIRONMENT_TEST', 'SALES_PRD_ADHOC', 'WAREHOUSE');


--2. Tagging databases
ALTER DATABASE DEMO_PRD SET TAG TAGGING_DB_TEST.TAGGING_SCH_TEST.ENVIRONMENT_TEST = 'PRD';

ALTER DATABASE DEMO_DEV SET TAG TAGGING_DB_TEST.TAGGING_SCH_TEST.ENVIRONMENT_TEST = 'DEV';

--Verify
SELECT SYSTEM$GET_TAG('TAGGING_DB_TEST.TAGGING_SCH_TEST.ENVIRONMENT_TEST', 'DEMO_PRD', 'DATABASE');
SELECT SYSTEM$GET_TAG('TAGGING_DB_TEST.TAGGING_SCH_TEST.ENVIRONMENT_TEST', 'DEMO_DEV', 'DATABASE');


--3. Tagging schemas
ALTER SCHEMA DEMO_PRD.SALES_DM SET TAG TAGGING_DB_TEST.TAGGING_SCH_TEST.DEPARTMENTS_TEST = 'SALES';

ALTER SCHEMA DEMO_DEV.SALES_DM SET TAG TAGGING_DB_TEST.TAGGING_SCH_TEST.DEPARTMENTS_TEST = 'SALES';

--Verify
SELECT SYSTEM$GET_TAG('TAGGING_DB_TEST.TAGGING_SCH_TEST.DEPARTMENTS_TEST', 'DEMO_PRD.SALES_DM', 'SCHEMA');
SELECT SYSTEM$GET_TAG('TAGGING_DB_TEST.TAGGING_SCH_TEST.DEPARTMENTS_TEST', 'DEMO_DEV.SALES_DM', 'SCHEMA');


--4. Tagging tables

ALTER TABLE DEMO_DEV.SALES_DM.CUSTOMER SET TAG 
TAGGING_DB_TEST.TAGGING_SCH_TEST.ENVIRONMENT_TEST = 'DEV';

ALTER TABLE DEMO_DEV.SALES_DM.CUSTOMER_ADRESS SET TAG TAGGING_DB_TEST.TAGGING_SCH_TEST.ENVIRONMENT_TEST = 'DEV';

--Verify
SELECT SYSTEM$GET_TAG('TAGGING_DB_TEST.TAGGING_SCH_TEST.ENVIRONMENT_TEST', 'DEMO_DEV.SALES_DM.CUSTOMER', 'TABLE');
SELECT SYSTEM$GET_TAG('TAGGING_DB_TEST.TAGGING_SCH_TEST.ENVIRONMENT_TEST', 'DEMO_DEV.SALES_DM.CUSTOMER_ADRESS', 'TABLE');

ALTER TABLE DEMO_PRD.SALES_DM.CUSTOMER SET TAG 
TAGGING_DB_TEST.TAGGING_SCH_TEST.ENVIRONMENT_TEST = 'PRD';

ALTER TABLE DEMO_PRD.SALES_DM.CUSTOMER_ADRESS SET TAG TAGGING_DB_TEST.TAGGING_SCH_TEST.ENVIRONMENT_TEST = 'PRD';

--Verify
SELECT SYSTEM$GET_TAG('TAGGING_DB_TEST.TAGGING_SCH_TEST.ENVIRONMENT_TEST', 'DEMO_PRD.SALES_DM.CUSTOMER', 'TABLE');
SELECT SYSTEM$GET_TAG('TAGGING_DB_TEST.TAGGING_SCH_TEST.ENVIRONMENT_TEST', 'DEMO_PRD.SALES_DM.CUSTOMER_ADRESS', 'TABLE');


--5. Tagging columns

ALTER TABLE DEMO_PRD.SALES_DM.CUSTOMER MODIFY COLUMN C_EMAIL_ADDRESS SET TAG TAGGING_DB_TEST.TAGGING_SCH_TEST.DEPARTMENTS_TEST = 'RESEARCH';

ALTER TABLE DEMO_PRD.SALES_DM.CUSTOMER_ADRESS MODIFY COLUMN CA_ZIP SET TAG TAGGING_DB_TEST.TAGGING_SCH_TEST.DEPARTMENTS_TEST = 'RESEARCH';

--Verify
SELECT * FROM TABLE(INFORMATION_SCHEMA.TAG_REFERENCES_ALL_COLUMNS('DEMO_PRD.SALES_DM.CUSTOMER', 'TABLE'));
SELECT * FROM TABLE(INFORMATION_SCHEMA.TAG_REFERENCES_ALL_COLUMNS('DEMO_PRD.SALES_DM.CUSTOMER_ADRESS', 'TABLE'));

----------------------------------------------------------------------------
--Verifying tags application
----------------------------------------------------------------------------

SELECT * FROM SNOWFLAKE.ACCOUNT_USAGE.TAGS WHERE CREATED LIKE '2024-07-30%';
SELECT * FROM SNOWFLAKE.ACCOUNT_USAGE.TAGS WHERE DELETED IS NULL ORDER BY TAG_NAME;
SELECT * FROM SNOWFLAKE.ACCOUNT_USAGE;

--View that aggregates compute credits per DEPARTMENTS over the last 7 days
--Tracking the compute credits per department
CREATE OR REPLACE VIEW TAGGING_SCH_TEST.V_COMPUTE_CREDITS_PER_DEPARTMENT
AS
SELECT
    TAG_VALUE AS DEPARTMENTS_TEST,
    SUM(NVL(CREDITS_USED, 0)) AS CREDITS
FROM
    SNOWFLAKE.ACCOUNT_USAGE.TAG_REFERENCES
LEFT JOIN
    SNOWFLAKE.ACCOUNT_USAGE.WAREHOUSE_METERING_HISTORY ON WAREHOUSE_NAME=OBJECT_NAME
WHERE
    TAG_NAME = 'DEPARTMENTS_TEST'
AND TAG_DATABASE = 'TAGGING_DB_TEST'
AND TAG_SCHEMA = 'TAGGING_SCH_TEST'
AND DOMAIN = 'WAREHOUSE'
AND START_TIME>=DATEADD('DAYS',-7,CURRENT_DATE())
GROUP BY 1
ORDER BY 2 DESC;

SELECT * FROM TAGGING_SCH_TEST.V_COMPUTE_CREDITS_PER_DEPARTMENT;

--View that aggregates compute credits per ENVIRONMENT over the last 7 days
--Tracking the compute credits per environment
CREATE OR REPLACE VIEW TAGGING_SCH_TEST.V_COMPUTE_CREDITS_PER_ENVIRONMENT
AS
SELECT
    TAG_VALUE AS ENVIRONMENT_TEST,
    SUM(NVL(CREDITS_USED, 0)) AS CREDITS
FROM
    SNOWFLAKE.ACCOUNT_USAGE.TAG_REFERENCES
LEFT JOIN
    SNOWFLAKE.ACCOUNT_USAGE.WAREHOUSE_METERING_HISTORY ON WAREHOUSE_NAME=OBJECT_NAME
WHERE
    TAG_NAME = 'ENVIRONMENT_TEST'
AND TAG_DATABASE = 'TAGGING_DB_TEST'
AND TAG_SCHEMA = 'TAGGING_SCH_TEST'
AND DOMAIN = 'WAREHOUSE'
AND START_TIME>=DATEADD('DAYS',-7,CURRENT_DATE())
GROUP BY 1
ORDER BY 2 DESC;

SELECT * FROM TAGGING_SCH_TEST.V_COMPUTE_CREDITS_PER_ENVIRONMENT;

--View that aggregates storage credits per ENVIRONMENT over the last 7 days
--Tracking the storage credits per environment
CREATE OR REPLACE VIEW TAGGING_SCH_TEST.V_STORAGE_USAGE_PER_ENVIRONMENT
AS
SELECT
    TAG_VALUE AS ENVIRONMENT_TEST,
    ((AVERAGE_DATABASE_BYTES + AVERAGE_FAILSAFE_BYTES + AVERAGE_HYBRID_TABLE_STORAGE_BYTES)/POWER(1024,2))::NUMBER(8,2) AS TOTAL_MB
FROM
    SNOWFLAKE.ACCOUNT_USAGE.TAG_REFERENCES
LEFT JOIN
    SNOWFLAKE.ACCOUNT_USAGE.DATABASE_STORAGE_USAGE_HISTORY ON DATABASE_NAME = OBJECT_NAME
WHERE
    TAG_NAME = 'ENVIRONMENT_TEST'
AND TAG_DATABASE = 'TAGGING_DB_TEST'
AND TAG_SCHEMA = 'TAGGING_SCH_TEST'
AND DOMAIN = 'DATABASE'
AND OBJECT_NAME <> 'SNOWFLAKE'
AND DELETED IS NULL
AND USAGE_DATE>=DATEADD('DAYS', -7, CURRENT_DATE())
ORDER BY 2 DESC;

SELECT * FROM TAGGING_SCH_TEST.V_STORAGE_USAGE_PER_ENVIRONMENT;
    
----------------------------------------------------------------------------
--Update tags
----------------------------------------------------------------------------

--Modify the tag named DEPARTMENTS to add 'marketing' as an allowed string value
ALTER TAG DEPARTMENTS_TEST
    ADD ALLOWED_VALUES 'MARKETING';

--Modify the tag named DEPARTMENTS to drop 'engineering' as an allowed string value
ALTER TAG DEPARTMENTS_TEST
    DROP ALLOWED_VALUES 'ENGINEERING';

--To set a tag on an existing column, use the ALTER TABLE … MODIFY COLUMN command for a table column or the ALTER VIEW … MODIFY COLUMN command for a view column. Note that more than one tag can be set or unset in a single statement.

ALTER TABLE X
  MODIFY COLUMN Y
  SET TAG NAME = 'VALUE';

--Removes a tag from the system
DROP TAG TAGGING_DB_TEST.TAGGING_SCH_TEST.DEPARTMENTS_TEST;
DROP TAG TAGGING_DB_TEST.TAGGING_SCH_TEST.ENVIRONMENT_TEST;

SHOW TAGS;

--Restores the most recent version of a tag to the system
UNDROP TAG TAGGING_DB_TEST.TAGGING_SCH_TEST.DEPARTMENTS_TEST;
UNDROP TAG TAGGING_DB_TEST.TAGGING_SCH_TEST.ENVIRONMENT_TEST;

SHOW TAGS;
